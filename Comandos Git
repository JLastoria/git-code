Comando Git

git init ( create a .git repository )
git status ( shows commit status )

git add nomedoarquivo.txt ( add file to be committed )
git add . ( add all files to be committed )

git commit nomedoarquivo.js (commit the file)
git commit -a ( commit all files )
git commit -a -m "msg" ( add a description when committed )
git commit ( opens nano editor text before being committed )

git log ( shows all commits )
git log -p ( displays modification details for each commit )
git log -p -2 ( displays modification details for 2 last days )
git log --stat ( shows statistics of whats has been changed )
git log --pretty=oneline ( displays all commits on one line each )
git log --since=2.days ( displays commits of 2 last days )

nano .gitignore (cria um arquivo de texto, todo arquivo ou pasta que for colocado lah, o git ignora como arquivo a ser commitado. Pode ser adicionado o proprio .gitignore)

git reset HEAD nomedoarquivo ( use this command to unstage an add commit)

git reset HEAD~2 (volta dois commits)
git reset HEAD-1 --soft ( volta um commit, mas ele esta pronto para ser commitado novamente ou retirado com o comando git reste HEAD nomedoarquivo.)
git reset HEAD-1 --hard (deleta o ultimo commit, deleta tbm todos os arquivos ou atualizacoes referentes a ele.)

git branch (lista as branches existes e aponta qual a branch ultilizada)
git branch -a (lista branches existens tanto local quanto remoto)
git checkout -b NOMEDABRANCH (cria uma nova branch)
git checkout nomedabranch (entra na branch expecifica, tbm pode ser ultilizado o codigo do commit no lugar do nomedabranch)
git chechout master ( entra na branch marter novamente)
git branch -d nomedabranch (deleta a branch expecifica)

git merge branchcriada (puxa para o master todas as atualizacoes da branchcriada - o comando deve ser dado da branch master)
git merge master (puxa para a branchcriada todas as atualizacoes da branch master - o comando dever ser executado da branchcriada.

ssh-keygen (cria duas chaves ssh, uma privada e uma publica)
cd ~/.ssh/ (acessa a pasta do ssh)
cat id_res.pub (exibe a chave publica que sera compartilhada no github)

git push origin master (faz um push do projeto para o master do git)

git clone CODIGO_HTTPS_DO_PROJETO nomedapastadestino ( faz clone do git para o pc )

git checkout -b func1 origin/funcionalidade1 
(cria branch local [func1] e clona a branch selecionada do github no caso :[origin/funcionalidade1])

git pull (verifica se todos os arquivos estao sincronizados com o github)
git pull origin master (pega do github todas as atualizacoes)

git tag 0.1.0 (cria uma tag com a versao 0.1.0)
git tag -l (mostra todas as tags)
git push origin master --tags ( sobe todas as tags e gera releases no github)












